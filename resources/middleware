< 스택 머신 제어 명령 >
push (<identifier> | <digit>) - 스택 머신에 값 푸시

< 연산 명령 >
_add
_subtract
_multiply
_divide
_jump <label>
_jnz <label> - label 위치로 두값이 0이 아니면 점프
_jz <label> - label 위치로 두값이 0 이면 점프

< 메모리 접근 명령 >
alloc <identifier> - 스택머신 top에 있는 값을 identifier 이름으로 할당
access <identifier> - 레지스터에 있는 identifier 값을 가져옴

< 라벨 >
label <identifier>

< 비교명령 >
_eq - stack에서 두 개의 값을 빼서 뺄셈을 했을 때 0이면 true
_neq - stack에서 두 개의 값을 빼서 뺄셈을 했을떄 0이 아니면 true
_bl (bigger then left)
_bleq (bigger then left or equals)
_br (bigger then right)
_breq (bigger then right or equals)

< 콘솔제어명령 >
conbuf <identifier | expr>
conflush

BufferedWriter bufferedWriter = new BufferedWriter(new OutputStreamWriter(System.out));//선언

bufferedWriter.write("Hello World!");
// write한다고 해서 바로바로 출력되지 않습니다.
// 직접 출력 stream에 반영되는 것이 아니라 성능을 위해 buffer에 저장해두었다가
// BufferedWriter가 flush되거나 close되었을 때 한번에 출력 stream에 반영하기 때문입니다.
bufferedWriter.flush();
bufferedWriter.newLine(); // 줄바꿈이 필요할 경우 사용합니다.
bufferedWriter.close(); // 버퍼 닫기
// close는 stream을 닫아버리기 때문에 계속 출력하고자 한다면 flush 사용합니다.

